[{"name": "test.test_acronyms.Acronyms.test_empty", "status": "passed", "message": "", "passed": true, "points": ["p01-18.1"], "backtrace": []}, {"name": "test.test_acronyms.Acronyms.test_first", "status": "failed", "message": "Lists differ: [] != ['EU', 'GDPR', 'IBM', 'IBM', 'EEA', 'EEA', 'IBM', 'PO', 'PO6', '3AU']\n\nSecond list contains 10 additional elements.\nFirst extra element 0:\n'EU'\n\n- []\n+ ['EU', 'GDPR', 'IBM', 'IBM', 'EEA', 'EEA', 'IBM', 'PO', 'PO6', '3AU']", "passed": false, "points": ["p01-18.1"], "backtrace": ["  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 592, in run\n    self._callTestMethod(testMethod)\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 550, in _callTestMethod\n    method()\n", "  File \"/Users/carlygordon/Desktop/DataAnalysis/mooc-data-analysis-with-python-2022/part01-e18_acronyms/test/test_acronyms.py\", line 20, in test_first\n    self.assertEqual(result, ['EU', 'GDPR', 'IBM', 'IBM', 'EEA', 'EEA', 'IBM', 'PO', 'PO6', '3AU'])\n"]}]