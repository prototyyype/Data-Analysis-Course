[{"name": "test.test_detect_ranges.DetectRanges.test_fifth", "status": "failed", "message": "Lists differ: [] != [-4, -2, 0, 2, 4]\n\nSecond list contains 5 additional elements.\nFirst extra element 0:\n-4\n\n- []\n+ [-4, -2, 0, 2, 4] : Incorrect result for the input list [4, 2, 0, -2, -4]!", "passed": false, "points": ["p01-10.1"], "backtrace": ["  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 592, in run\n    self._callTestMethod(testMethod)\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 550, in _callTestMethod\n    method()\n", "  File \"/Users/carlygordon/Desktop/DataAnalysis/mooc-data-analysis-with-python-2022/part01-e10_detect_ranges/test/test_detect_ranges.py\", line 43, in test_fifth\n    self.assertEqual(detect_ranges(L), list(reversed(L)), msg=f\"Incorrect result for the input list {L}!\")\n"]}, {"name": "test.test_detect_ranges.DetectRanges.test_first", "status": "failed", "message": "Lists differ: [] != [2, (4, 9), 10, (12, 14)]\n\nSecond list contains 4 additional elements.\nFirst extra element 0:\n2\n\n- []\n+ [2, (4, 9), 10, (12, 14)] : Incorrect result for the input list [2, 5, 4, 8, 12, 6, 7, 10, 13]!", "passed": false, "points": ["p01-10.1"], "backtrace": ["  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 592, in run\n    self._callTestMethod(testMethod)\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 550, in _callTestMethod\n    method()\n", "  File \"/Users/carlygordon/Desktop/DataAnalysis/mooc-data-analysis-with-python-2022/part01-e10_detect_ranges/test/test_detect_ranges.py\", line 24, in test_first\n    self.assertEqual(result, [2, (4, 9), 10, (12, 14)], msg=\"Incorrect result for the input list %s!\" % L)\n"]}, {"name": "test.test_detect_ranges.DetectRanges.test_fourth", "status": "failed", "message": "Lists differ: [] != [-2, (0, 4)]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n-2\n\n- []\n+ [-2, (0, 4)] : Incorrect result for the input list [-2, 0, 1, 2, 3]!", "passed": false, "points": ["p01-10.1"], "backtrace": ["  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 592, in run\n    self._callTestMethod(testMethod)\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 550, in _callTestMethod\n    method()\n", "  File \"/Users/carlygordon/Desktop/DataAnalysis/mooc-data-analysis-with-python-2022/part01-e10_detect_ranges/test/test_detect_ranges.py\", line 39, in test_fourth\n    self.assertEqual(res, [-2, (0, 4)], msg=f\"Incorrect result for the input list {L}!\")\n"]}, {"name": "test.test_detect_ranges.DetectRanges.test_random", "status": "failed", "message": "Lists differ: [-85, -45, -18, -13, 7, 9, 21, 43, 50, 71] != []\n\nFirst list contains 10 additional elements.\nFirst extra element 0:\n-85\n\n- [-85, -45, -18, -13, 7, 9, 21, 43, 50, 71]\n+ [] : Wrong result for input list [71, 7, 9, 43, -85, -18, 50, -13, -45, 21]!", "passed": false, "points": ["p01-10.1"], "backtrace": ["  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 592, in run\n    self._callTestMethod(testMethod)\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 550, in _callTestMethod\n    method()\n", "  File \"/Users/carlygordon/Desktop/DataAnalysis/mooc-data-analysis-with-python-2022/part01-e10_detect_ranges/test/test_detect_ranges.py\", line 60, in test_random\n    self.assertEqual(sorted(L), catenation, msg=\"Wrong result for input list %s!\" % L)\n"]}, {"name": "test.test_detect_ranges.DetectRanges.test_second", "status": "failed", "message": "Lists differ: [] != [(1, 3), 4]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n(1, 3)\n\n- []\n+ [(1, 3), 4] : Incorrect result for the input list [1, 2, 4]!", "passed": false, "points": ["p01-10.1"], "backtrace": ["  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 592, in run\n    self._callTestMethod(testMethod)\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 550, in _callTestMethod\n    method()\n", "  File \"/Users/carlygordon/Desktop/DataAnalysis/mooc-data-analysis-with-python-2022/part01-e10_detect_ranges/test/test_detect_ranges.py\", line 29, in test_second\n    self.assertEqual(res, [(1, 3), 4], msg=f\"Incorrect result for the input list {L}!\")\n"]}, {"name": "test.test_detect_ranges.DetectRanges.test_third", "status": "failed", "message": "Lists differ: [] != [(88, 91), (92, 98)]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n(88, 91)\n\n- []\n+ [(88, 91), (92, 98)] : Incorrect result for the input list [88, 89, 90, 92, 93, 94, 95, 96, 97]!", "passed": false, "points": ["p01-10.1"], "backtrace": ["  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 592, in run\n    self._callTestMethod(testMethod)\n", "  File \"/Users/carlygordon/opt/anaconda3/lib/python3.9/unittest/case.py\", line 550, in _callTestMethod\n    method()\n", "  File \"/Users/carlygordon/Desktop/DataAnalysis/mooc-data-analysis-with-python-2022/part01-e10_detect_ranges/test/test_detect_ranges.py\", line 34, in test_third\n    self.assertEqual(res, [(88, 91), (92, 98)], msg=f\"Incorrect result for the input list {L}!\")\n"]}]